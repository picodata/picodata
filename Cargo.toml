[package]
name = "picodata"
version = "25.5.0"
edition = "2021"
autotests = false
rust-version = "1.85"
license-file = "LICENSE"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
abi_stable = "0.11"
ahash = "0.8"
bitflags = "2.9.1"
base64 = "0.22"
bytes = "1.8"
chrono = "0.4"
clap = { version = "4.5", features = ["derive", "env"] }
comfy-table = "7.1"
diff = "0.1"
either = "1.13"
file_shred = "1.2"
futures = "0.3"
hmac = { version = "0.12", features = ["reset"] }
indoc = "2.0"
itoa = "1.0"
libc = "0.2"
libloading = "0.8"
md5 = "0.7"
nix = { version = "0.29", features = [
  "fs",
  "term",
  "process",
  "signal",
  "dir",
] }
once_cell = "1.20"
openssl = "0.10"
pgwire = { version = "0.24", default-features = false, features = [
  "server-api",
] }
picodata-pike = "2.5.0"
postgres-types = { version = "0.2", features = [
  "array-impls",
  "with-serde_json-1",
  "with-time-0_3",
  "with-uuid-0_8",
] }
prometheus = "0.14.0"
protobuf = { version = "3", features = ["bytes", "with-bytes"] }
raft = { version = "0.7", git = "https://git.picodata.io/core/raft-rs.git", branch = "picodata-master" }
rand = "0.8"
rmp = "*"
rmp-serde = "1.1"
rmpv = { version = "1.0", features = ["with-serde"] }
rust_decimal = { version = "1.36", features = ["db-postgres"] }
rustyline = "14.0"
rustyline-derive = "0.10"
scopeguard = "1.2"
serde = "1.0"
serde_bytes = "0.11"
serde_json = "1.0"
serde_repr = "0.1"
serde_yaml = "0.9"
sha2 = { version = "0.10", features = ["asm", "oid"] }
slog = { version = "2.7", features = [
  "max_level_trace",
  "release_max_level_trace",
] }
smallvec = { version = "1.13", features = ["write"] }
smol_str = "0.2"
socket2 = "0.5"
sql_protocol = { version = "25.4", path = "sql-protocol" }
sqlparser = { version = "0.40", features = ["visitor"] }
stringprep = "0.1"
subtle = "2.5"
tempfile = "3.8"
thiserror = "1.0"
time = { version = "0.3", features = ["parsing", "formatting", "macros"] }
uuid = { version = "0.8", features = ["v4"] } # TODO: update to 1.0
va_list = ">=0.1.4"
jsonwebtoken = "9.3"
replace_with = "0.1.8"
zeroize = "1.8"
sqlformat = "0.4"

# Bundled modules
pico_proc_macro = { path = "pico_proc_macro" }
picodata-plugin = { path = "picodata-plugin", features = ["internal_test"] }
sql-core = { path = "sql-planner" }
tarantool = { path = "tarantool/tarantool", features = [
  "picodata",
  "test",
  "stored_procs_slice",
] }
regex = "1.11"
ordered_hash_map = { version = "0.5.0", features = ["serde"] }

[dev-dependencies]
anyhow = "1.0"
pretty_assertions = "1.4"
pbkdf2 = { version = "0.12.1", features = ["simple", "std"] }

[build-dependencies]
git-version = "0.3"
quote = "1.0"
syn = { version = "2.0", features = ["full", "extra-traits", "printing"] }

build-rs-helpers = { path = "build-rs-helpers" }
tarantool-build = { path = "tarantool-build" }

# an attempt to minimize the number of lines in Cargo.lock
[patch.crates-io]
tarantool = { path = "tarantool/tarantool" }
tarantool-proc = { path = "tarantool/tarantool-proc" }
tlua = { path = "tarantool/tlua" }
tlua-derive = { path = "tarantool/tlua-derive" }

[patch."https://git.picodata.io/picodata/picodata/tarantool-module.git"]
tarantool = { path = "tarantool/tarantool" }
tarantool-proc = { path = "tarantool/tarantool-proc" }
tlua = { path = "tarantool/tlua" }
tlua-derive = { path = "tarantool/tlua-derive" }

[features]
default = []
dynamic_build = []
error_injection = []
load_test = []
webui = []

[lib]
doctest = true

[[test]]
name = "inner"
path = "test/inner.rs"
harness = false

[workspace]
resolver = "2"
members = [
  ".",
  "benchmark/perf",
  "build-rs-helpers",
  "gostech/gostech-audit-log",
  "pico_proc_macro",
  "sql-benches",
  "sql-planner",
  "sql-protocol",
  "sql-type-system",
  "tarantool-build",
  "test/testplug",
]

# For releases, we prioritize performance over compilation time.
# As demonstrated in https://git.picodata.io/picodata/picodata/picodata/-/issues/1026#note_107222,
# these options can result in a performance improvement of 16.89%.
# However, it dramatically increases compilation time, so in CI on non-master
# branches a faster profile is used - fast-release.
[profile.release]
debug = 1
lto = "fat"
codegen-units = 1

# A faster release build that is used in CI on non-master branches.
[profile.fast-release]
inherits = "release"
debug = "line-tables-only"
lto = "off"
codegen-units = 64

[profile.asan-dev]
inherits = "dev"
